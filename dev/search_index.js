var documenterSearchIndex = {"docs":
[{"location":"Climate/","page":"Climate","title":"Climate","text":"Pages = [\"index.md\"]\nDepth = 3","category":"page"},{"location":"Climate/#Thresholds","page":"Climate","title":"Thresholds","text":"","category":"section"},{"location":"Climate/","page":"Climate","title":"Climate","text":"cal_anomaly_quantile\ncal_anomaly_clim\ncal_threshold","category":"page"},{"location":"Climate/#ClimateStats.cal_anomaly_quantile","page":"Climate","title":"ClimateStats.cal_anomaly_quantile","text":"cal_anomaly_quantile(\n    A::AbstractArray{T<:Real},\n    dates;\n    parallel,\n    use_mov,\n    na_rm,\n    method,\n    p1,\n    p2,\n    fun,\n    probs,\n    options...\n) -> Any\n\n\nCalculate the anomaly of a 3D array of temperature data.\n\nArguments\n\nA      : the 3D array of temperature data\ndates    : an array of dates corresponding to the temperature data\nparallel : whether to use parallel processing (default true)\nuse_mov  : whether to use a moving window to calculate the threshold (default true)\nmethod   : the method to use for calculating the threshold, one of [\"full\", \"season\", \"base\", \"pTRS\"] (default \"full\")\nprobs    : default [0.5]\np1       : the start year for the reference period (default 1981)\np2       : the end year for the reference period (default 2010)\nfun      : the function used to calculate the anomaly (default _exceed)\n\nReturns\n\nAn array of the same shape as A containing the temperature anomaly.\n\nReferences\n\nVogel, M. M., Zscheischler, J., Fischer, E. M., & Seneviratne, S. I. (2020). Development of Future Heatwaves for Different Hazard Thresholds. Journal of Geophysical Research: Atmospheres, 125(9). https://doi.org/10.1029/2019JD032070\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_anomaly_clim","page":"Climate","title":"ClimateStats.cal_anomaly_clim","text":"cal_anomaly_clim(\n    A::AbstractArray{T<:Real},\n    dates;\n    parallel,\n    use_mov,\n    method,\n    p1,\n    p2,\n    fun_clim,\n    fun_anom\n) -> Any\n\n\nCalculate the anomaly of an array relative to its climatology.\n\nArguments\n\nA::AbstractArray{T}: The input array to calculate the anomaly of.\ndates: The dates corresponding to the input array.\nparallel::Bool=true: Whether to use parallel processing.\nuse_mov=true: Whether to use a moving window to calculate the climatology.\nmethod=\"full\": The method to use for calculating the climatology. Can be \"base\", \"season\", or \"full\".\np1=1981: The start year for the period to use for calculating the climatology.\np2=2010: The end year for the period to use for calculating the climatology.\nfun_clim=nanmean: The function to use for calculating the climatology.\nfun_anom=_exceed: The function to use for calculating the anomaly.\n\nReturns\n\nanom: The anomaly of the input array relative to its climatology.\n\nExample\n\nusing Ipaper\n\n# Generate some sample data\nA = rand(365, 10)\ndates = Date(2000, 1, 1):Day(1):Date(2000, 12, 31)\n\n# Calculate the anomaly relative to the climatology\nanom = cal_anomaly_clim(A, dates; method=\"base\")\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_threshold","page":"Climate","title":"ClimateStats.cal_threshold","text":"cal_threshold(\n    A::AbstractArray{T<:Real},\n    dates;\n    parallel,\n    use_mov,\n    na_rm,\n    method,\n    p1,\n    p2,\n    probs,\n    options...\n) -> Any\n\n\nCalculate the threshold value for a given dataset A and dates. The threshold value is calculated based on the specified method.\n\nArguments\n\nA::AbstractArray{T}: The input data array.\ndates: The dates corresponding to the input data array.\nparallel::Bool=true: Whether to use parallel computation.\nuse_mov::Bool=true: Whether to use moving window.\nna_rm::Bool=true: Whether to remove missing values.\nmethod::String=\"full\": Possible values are \"base\", \"season\", and \"full\".\np1::Int=1981: The start year for the reference period.\np2::Int=2010: The end year for the reference period.\nprobs::Vector{Float64}=[0.5]: The probability levels to use for calculating the threshold value.\noptions...: Additional options to pass to the underlying functions.\n\nReturns\n\nFor different methods: \n\nfull: Array with the dimension of (dims..., ntime, nprob)\nbase: Array with the dimension of (dims..., 366, nprob)\nseason: Array with the dimension of (dims..., nyear)\n\nExamples\n\ndates = Date(2010, 1):Day(1):Date(2020, 12, 31);\nntime = length(dates)\ndata = rand(10, ntime);\ncal_threshold(data, dates; p1=2010, p2=2015, method=\"full\")\n\n\n\n\n\n","category":"function"},{"location":"Climate/","page":"Climate","title":"Climate","text":"_cal_anomaly_3d","category":"page"},{"location":"Climate/#ClimateStats._cal_anomaly_3d","page":"Climate","title":"ClimateStats._cal_anomaly_3d","text":"_cal_anomaly_3d(\n    A::AbstractArray{T<:Real, 3},\n    TRS::AbstractArray{T<:Real, 3},\n    dates;\n    T_wl,\n    fun_anom,\n    ignored...\n) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"Climate/","page":"Climate","title":"Climate","text":"cal_mTRS_base\ncal_mTRS_full\n\ncal_climatology_base\ncal_climatology_full","category":"page"},{"location":"Climate/#ClimateStats.cal_mTRS_base","page":"Climate","title":"ClimateStats.cal_mTRS_base","text":"cal_mTRS_base(\n    arr::AbstractArray{T<:Real, N},\n    dates;\n    dims,\n    use_quantile,\n    fun!,\n    probs,\n    dtype,\n    p1,\n    p2,\n    kw...\n) -> AbstractArray{T} where T<:Real\n\n\nMoving Threshold for Heatwaves Definition\n\nArguments\n\narr : time should be in the last dimension.\ntype: The matching type of the moving doys, \"md\" (default) or \"doy\".\n\nReturn\n\nTRS: in the dimension of [nlat, nlon, ndoy, nprob]\n\nReferences\n\nVogel, M. M., Zscheischler, J., Fischer, E. M., & Seneviratne, S. I. (2020). Development of Future Heatwaves for Different Hazard Thresholds. Journal of Geophysical Research: Atmospheres, 125(9). https://doi.org/10.1029/2019JD032070\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_mTRS_full","page":"Climate","title":"ClimateStats.cal_mTRS_full","text":"cal_mTRS_full(\n    arr::AbstractArray{T<:Real, N},\n    dates;\n    dims,\n    width,\n    verbose,\n    use_quantile,\n    fun!,\n    use_mov,\n    probs,\n    kw...\n) -> Any\n\n\nMoving Threshold for Heatwaves Definition\n\nArguments\n\nuse_mov: Boolean (default true). \nif true, 31*15 values will be used to calculate threshold for each grid; \nif false, the input arr is smoothed first, then only 15 values will be  used to calculate threshold.\n\n!!! 必须是完整的年份，不然会出错\n\nReferences\n\nVogel, M. M., Zscheischler, J., Fischer, E. M., & Seneviratne, S. I. (2020). Development of Future Heatwaves for Different Hazard Thresholds. Journal of Geophysical Research: Atmospheres, 125(9). https://doi.org/10.1029/2019JD032070\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_climatology_base","page":"Climate","title":"ClimateStats.cal_climatology_base","text":"cal_climatology_base(\n    A::AbstractArray{T<:Real},\n    dates;\n    fun!,\n    kw...\n) -> AbstractArray{T} where T<:Real\n\n\nCalculate the climatology of a dataset A based on the dates.\n\nThe climatology is the long-term average of a variable over a specific period of time. This function calculates the climatology of the input dataset A based on the dates dates. The calculation is performed by applying a function fun! to a moving window of the data.\n\nArguments:\n\nA            : :AbstractArray{T}: the input dataset, where T is a subtype of Real.\ndates       : the dates associated with the input dataset, as a vector of Date objects.\nfun!        : the function to apply to the moving window of the data. It should take an input array and return a scalar.\nuse_quantile: default false, a boolean indicating whether to use a quantile-based filter to remove outliers.\np1, p2    : the references period\n\nReturns:\n\na matrix of the same size as A, containing the climatology values.\n\nExample:\n\nusing Dates\nusing Statistics\n# using NaNStatistics\n\nA = rand(365, 10) |> transpose # simulate a year of daily data for 10 variables\ndates = Date(2022, 1, 1):Day(1):Date(2022, 12, 31)\nclim = cal_climatology_base(A, dates; p1=2022, p2=2022)\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_climatology_full","page":"Climate","title":"ClimateStats.cal_climatology_full","text":"cal_climatology_full(\n    A::AbstractArray{T<:Real},\n    dates;\n    fun!,\n    kw...\n) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"Climate/","page":"Climate","title":"Climate","text":"ClimateStats.cal_mTRS_base!\nClimateStats.cal_mTRS_base3!","category":"page"},{"location":"Climate/#ClimateStats.cal_mTRS_base!","page":"Climate","title":"ClimateStats.cal_mTRS_base!","text":"cal_mTRS_base!(\n    Q::AbstractArray{T<:Real},\n    arr::AbstractArray{T<:Real, N},\n    mmdd;\n    dims,\n    fun,\n    probs,\n    parallel,\n    halfwin,\n    use_mov,\n    ignore...\n) -> AbstractArray{T} where T<:Real\n\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_mTRS_base3!","page":"Climate","title":"ClimateStats.cal_mTRS_base3!","text":"cal_mTRS_base3!(\n    Q::AbstractArray,\n    data::AbstractArray{T<:Real, 3},\n    mmdd;\n    dims,\n    probs,\n    parallel,\n    halfwin,\n    use_mov,\n    method_q,\n    na_rm,\n    ignore...\n) -> AbstractArray\n\n\n\n\n\n\n","category":"function"},{"location":"Climate/","page":"Climate","title":"Climate","text":"cal_yearly_Tair\ncal_warming_level","category":"page"},{"location":"Climate/#ClimateStats.cal_yearly_Tair","page":"Climate","title":"ClimateStats.cal_yearly_Tair","text":"Calculate yearly air temperature.\n\nDescription\n\nwe use the fixed thresholds and add the seasonal warming signal. Thus, thresholds are defined as a fixed baseline (such as for the fixed threshold) plus seasonally moving mean warming of the corresponding future climate based on the 31-year moving mean of the warmest three months.\n\nDetails\n\nThis function calculates the yearly air temperature based on the input temperature data and dates. If only_summer is true, it only calculates the temperature for summer months. The function applies the calculation along the specified dimensions.\n\nArguments\n\nA::AbstractArray{T,N}: input array of temperature data.\ndates: array of dates corresponding to the temperature data.\ndims=N: dimensions to apply the function along.\nonly_summer=false: if true, only calculate temperature for summer months.\n\nReturns\n\nT_year: array of yearly temperature data.\n\n\n\n\n\n","category":"function"},{"location":"Climate/#ClimateStats.cal_warming_level","page":"Climate","title":"ClimateStats.cal_warming_level","text":"cal_warming_level(\n    A::AbstractArray{T<:Real, N},\n    dates;\n    p1,\n    p2,\n    dims,\n    only_summer\n) -> Any\n\n\n\n\n\n\n","category":"function"},{"location":"#ClimateStats-in-Julia-(R-base-for-Julia)","page":"Introduction","title":"ClimateStats in Julia (R base for Julia)","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"(Image: Stable) (Image: Dev) (Image: CI) (Image: Codecov)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Dongdong Kong","category":"page"},{"location":"#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"using Pkg\nPkg.add(url=\"https://github.com/jl-pkgs/ClimateStats.jl\")","category":"page"}]
}
